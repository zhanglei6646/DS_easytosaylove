#include<stdio.h>
//定义栈
typedef struct
{
    int elem[50];
    int top;
}SeqStack;
//初始化栈
void InitStack(SeqStack *S)
{
    S->top=-1;
}
//进栈
int push(SeqStack *S,int x)
{
    if(S->top==49) return (0);
    S->top++;
    S->elem[S->top]=x;
    return (1);
}
//出栈
int pop(SeqStack *S,int *x)
{
    if(S->top==-1)
        return(0);
    else
    {
        *x=S->elem[S->top];
        S->top--;
        return(1);
    }
}
//读栈顶元素并存入X所指的空间
int GetTop(SeqStack *S,int *x)
{
    if(S->top==-1)
        return (0);
    else
    {
        *x=S->elem[S->top];
    return(1);
    }
}
int main()
{
    int i,j,m,n;
    scanf("%d %d",&m,&n);
    int maze[m][n];
    //先要建立一个可以走通的路径，此处先不写
    for(i=1;i<=m;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(maze[i][j]==0)
                {
                SeqStack *S;
                S=(SeqStack *)maloc(sizeof(SeqStack));
                InitStack(S);
                SeqStack *S1;
                S1=(SeqStack *)maloc(sizeof(SeqStack));
                push(S1,maze[i][j]);
                }
        }
    }
}




